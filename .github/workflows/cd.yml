name: cd

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

defaults:
  run:
    shell: bash -e {0}

concurrency:
  group: ${{ github.job }}-${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build distribution üì¶
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Upload artifacts to Runner
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/streamlit-msal-2  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign the Python üêç distribution üì¶ with Sigstore and upload them to GitHub Release
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: |
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/*.whl"
        tag: ${{ steps.get_version.outputs.VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
